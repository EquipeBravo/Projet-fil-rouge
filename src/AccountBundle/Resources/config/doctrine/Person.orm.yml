AccountBundle\Entity\Person:
    type: entity
    # Many Persons can have Many Teams
    manyToMany:
        teams:
            targetEntity: Team
            joinTable:
                name: users_teams
                joinColumns:
                    person_id:
                        referencedColumnName: id
                        onDelete: CASCADE
                inverseJoinColumns:
                    team_id:
                        referencedColumnName: id
                        onDelete: CASCADE
    # Many Persons can have Many Roles
        userRoles:
            targetEntity: Role
            joinTable:
                name: roles_users
                joinColumns:
                    person_id:
                        referencedColumnName: id
                inverseJoinColumns:
                    role_id:
                        referencedColumnName: id    
    table: null
    repositoryClass: AccountBundle\Repository\PersonRepository
    id:
        id:
            type: integer
            id: true
            generator:
                strategy: AUTO
    fields:
        lastName:
            type: string
            length: '128'
        firstName:
            type: string
            length: '128'
        birthDate:
            type: date
            nullable: true
        phone:
            type: string
            length: '64'
            nullable: true
        street:
            type: string
            length: 255
            nullable: true
        zip:
            type: string
            length: '16'
            nullable: true
        city:
            type: string
            length: '64'
            nullable: true
        email:
            type: string
            length: '128'
            unique: true
        password:
            type: string
            length: '128'
        token:
            type: string
            length: 255
            nullable: true
            unique: true
    lifecycleCallbacks: {  }
